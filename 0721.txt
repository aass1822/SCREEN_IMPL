025/07/21 - 오늘 배운 내용 정리
1. 인풋 값을 Number로 변환하는 방법
input 요소의 값을 숫자로 변환하려면 Number() 함수를 사용할 수 있습니다. 예를 들어:

javascript
복사
편집
this.수학 = Number(input.value);  // input의 값을 숫자형으로 변환
input.value는 기본적으로 문자열로 받아지기 때문에, 이를 숫자로 변환하려면 Number()를 사용해야 합니다.

2. 배열에 대해
배열은 여러 자료 타입을 저장할 수 있는 자료구조입니다. 자바스크립트에서 배열을 다루는 몇 가지 방법을 정리했습니다.

배열의 인덱스 접근

javascript
복사
편집
console.log(arr[0]);  // 배열의 첫 번째 요소에 접근
배열에서 특정 인덱스를 지정하여 그 위치의 값을 찾을 수 있습니다.

3. 자바에서 배열의 특성
자바에서는 배열 안에 서로 다른 자료형을 담을 수 없습니다. 배열의 요소는 동일한 데이터 타입이어야 합니다. 하지만 자바스크립트에서는 배열 안에 다양한 자료형을 혼합해서 저장할 수 있습니다.

4. 배열 함수
자바스크립트 배열에서 자주 사용하는 함수들을 정리해보겠습니다.

push(): 배열의 마지막에 항목을 추가합니다.

javascript
복사
편집
arr.push(10);  // 배열의 마지막에 10을 추가
pop(): 배열의 마지막 항목을 제거하고 반환합니다.

javascript
복사
편집
let removedItem = arr.pop();  // 마지막 항목 제거 후 그 값을 반환
배열에서 LIFO (Last In, First Out) 구조를 따르며, 마지막에 들어간 항목이 먼저 나간다는 특성을 가집니다.

5. 배열 정렬
배열의 정렬은 기본적으로 유니코드 포인트 값을 기준으로 정렬됩니다. 숫자를 정렬할 때는 숫자 비교 함수가 필요합니다.

기본 정렬 (유니코드 기준)

javascript
복사
편집
arr.sort();  // 기본적으로 유니코드 포인트 값에 따라 정렬됨
숫자형 배열 오름차순 정렬

javascript
복사
편집
arr2.sort((a, b) => a - b);  // 숫자 오름차순
숫자형 배열 내림차순 정렬

javascript
복사
편집
arr2.sort((a, b) => b - a);  // 숫자 내림차순
📌 참고: sort() 메서드는 배열을 직접 수정합니다. 복사본을 만들고 싶다면 slice()나 concat() 메서드를 사용해야 합니다.
6. filter() 메서드
filter()는 배열의 요소 중 특정 조건을 만족하는 요소들만 얕은 복사본으로 반환하는 함수입니다. 원본 배열은 수정되지 않습니다.

javascript
복사
편집
let filteredArray = arr.filter(item => item > 10);  // 10보다 큰 숫자만 반환
7. ... (스프레드 연산자)
스프레드 연산자 ...는 객체나 배열의 요소들을 풀어서 가져올 때 사용합니다. 예를 들어:

javascript
복사
편집
let arr2 = [1, 2, 3];
let arr3 = [...arr2];  // arr2의 복사본을 생성
8. document.createElement()
HTML에서 새로운 요소를 동적으로 생성할 때 document.createElement()를 사용할 수 있습니다. 예를 들어, <option> 태그를 만들고 싶을 때:

javascript
복사
편집
let option = document.createElement("option");  // option 태그 생성
option.value = "apple";  // value 속성 설정
option.textContent = "Apple";  // 화면에 표시할 텍스트 설정
정리
오늘은 배열과 배열 함수를 다루었고, HTML 요소 동적 생성 및 스프레드 연산자와 같은 유용한 자바스크립트 기능들을 배웠습니다. 이를 통해 더 효율적인 코드 작성이 가능해질 것입니다. 각 함수의 특성을 잘 이해하고 활용하는 것이 중요합니다!