# 2025/07/23

> 스코프(SCOPE)란  
        변수나 함수가 접근할 수 있는 범위  
        전역스코프(Global Scope)와 지역 스코프(Local Scope)로 구별  
        전역스코프 : 모든 지역에서 접근이 가능  
        지역스코프 : 특정 영역( { } )에서만 접근이 가능   
      - 함수스코프 : 함수본분{} 내에서 선언된 변수는 함수내에서만 접근 가능  
      - 블록스코프 : if,while...{} 블록 내에서만 접근 가능   
      - 렉시컬(Lexical)스코프 : 변수를 선언한 위치에 따라서 스코프 결정  
---
> 클로저  
        클로저는 내부 함수가 외부 함수의 변수에 접근 할 수 있는 방법을 의미한다.  
        정보 은닉 : 클로저를 사용하여 외부에서 접근 할 수 없도록 변수를 보호하고,  
        함수를 통해서만 접근 가능하도록 제한 할 수 있다.  
        데이터 보존 : 클로저를 사용하여 함수가 생성될 당시의 환경을 유지하면서,  
        함수내에서 데이터를 영구적으로 보존할 수 있다.  
        비동기 처리 : 클로저를 사용하여 비동기적인 작업에서 결과를 유지하고,  
        필요할 때에 접근할 수 있다.  

> 콜백함수(CALL BACK)  
        함수를 호출하는 시점이 바뀌어진 형태의 함수    
        기존방식 : 사용자(개발자)가 함수를 직접정의 -> 정의된 함수를 호출(CALL)하여 결과를 반환받는 방식  
        CALLBACK : 콜백함수에 인자로 로직이 담긴 함수를 (함수주소) 전달하여 콜백함수로부터 처리된 결과를  
        반환하는 방식  
---
> CALL-BY-VALUE 양식
 function func1(){
 console.log("TEST");
 }// 함수실행
 func1(100,200); // call-by-value

